/*
 * SPDX-FileCopyrightText: 2023-2024 Sony Semiconductor Solutions Corporation
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef SDK_JSON_PRINTER_H
#define SDK_JSON_PRINTER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#include "flatcc/flatcc_json_printer.h"
#include "flatcc/flatcc_prologue.h"

static void EVP_SDK_Config_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_StateInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_StateOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_Exit_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobRequestAzureBlob_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobRequestEvp_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobRequestHttp_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobRequestHttpExt_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobRequestUnion_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void EVP_SDK_BlobRequestUnion_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void EVP_SDK_BlobInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobResultAzureBlob_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobResultEvp_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobResultHttp_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobResultHttpExt_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_BlobResultUnion_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void EVP_SDK_BlobResultUnion_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void EVP_SDK_BlobOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_MessageSentInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_MessageSentOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_MessageReceived_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_TelemetryEntry_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_TelemetryInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_TelemetryOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_RpcRequest_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_RpcResponseInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_RpcResponseOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_EventBody_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void EVP_SDK_EventBody_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void EVP_SDK_Event_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_GetEvent_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_RequestResendConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_RequestUnion_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void EVP_SDK_RequestUnion_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void EVP_SDK_Request_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_Simple_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_ResponseUnion_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void EVP_SDK_ResponseUnion_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void EVP_SDK_Response_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_StreamParamsRequest_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_StreamNng_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void EVP_SDK_StreamParams_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void EVP_SDK_StreamParams_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void EVP_SDK_StreamParamsResponse_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);

static void EVP_SDK_StreamNngMode_print_json_enum(flatcc_json_printer_t *ctx, int8_t v)
{

    switch (v) {
    case (0): flatcc_json_printer_enum(ctx, "Dial", 4); break;
    case (1): flatcc_json_printer_enum(ctx, "Listen", 6); break;
    default: flatcc_json_printer_int8(ctx, v); break;
    }
}

static void EVP_SDK_StreamNngProtocol_print_json_enum(flatcc_json_printer_t *ctx, int8_t v)
{

    switch (v) {
    case (0): flatcc_json_printer_enum(ctx, "Push", 4); break;
    case (1): flatcc_json_printer_enum(ctx, "Pull", 4); break;
    default: flatcc_json_printer_int8(ctx, v); break;
    }
}

static void EVP_SDK_StreamType_print_json_enum(flatcc_json_printer_t *ctx, int8_t v)
{

    switch (v) {
    case (0): flatcc_json_printer_enum(ctx, "Null", 4); break;
    case (1): flatcc_json_printer_enum(ctx, "Nng", 3); break;
    default: flatcc_json_printer_int8(ctx, v); break;
    }
}

static void EVP_SDK_StreamDirection_print_json_enum(flatcc_json_printer_t *ctx, int8_t v)
{

    switch (v) {
    case (0): flatcc_json_printer_enum(ctx, "In", 2); break;
    case (1): flatcc_json_printer_enum(ctx, "Out", 3); break;
    default: flatcc_json_printer_int8(ctx, v); break;
    }
}

static void EVP_SDK_BlobRequestUnion_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "azureBlob", 9);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "evp", 3);
        break;
    case 3:
        flatcc_json_printer_enum(ctx, "http", 4);
        break;
    case 4:
        flatcc_json_printer_enum(ctx, "http_ext", 8);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void EVP_SDK_BlobRequestUnion_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobRequestAzureBlob_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobRequestEvp_print_json_table);
        break;
    case 3:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobRequestHttp_print_json_table);
        break;
    case 4:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobRequestHttpExt_print_json_table);
        break;
    default:
        break;
    }
}

static void EVP_SDK_BlobResultUnion_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "azureBlob", 9);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "evp", 3);
        break;
    case 3:
        flatcc_json_printer_enum(ctx, "http", 4);
        break;
    case 4:
        flatcc_json_printer_enum(ctx, "http_ext", 8);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void EVP_SDK_BlobResultUnion_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobResultAzureBlob_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobResultEvp_print_json_table);
        break;
    case 3:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobResultHttp_print_json_table);
        break;
    case 4:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobResultHttpExt_print_json_table);
        break;
    default:
        break;
    }
}

static void EVP_SDK_EventBody_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "config", 6);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "state", 5);
        break;
    case 3:
        flatcc_json_printer_enum(ctx, "exit", 4);
        break;
    case 4:
        flatcc_json_printer_enum(ctx, "blob", 4);
        break;
    case 5:
        flatcc_json_printer_enum(ctx, "messageSent", 11);
        break;
    case 6:
        flatcc_json_printer_enum(ctx, "messageReceived", 15);
        break;
    case 7:
        flatcc_json_printer_enum(ctx, "telemetry", 9);
        break;
    case 8:
        flatcc_json_printer_enum(ctx, "rpcRequest", 10);
        break;
    case 9:
        flatcc_json_printer_enum(ctx, "rpcResponse", 11);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void EVP_SDK_EventBody_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_Config_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_StateOutput_print_json_table);
        break;
    case 3:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_Exit_print_json_table);
        break;
    case 4:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobOutput_print_json_table);
        break;
    case 5:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_MessageSentOutput_print_json_table);
        break;
    case 6:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_MessageReceived_print_json_table);
        break;
    case 7:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_TelemetryOutput_print_json_table);
        break;
    case 8:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_RpcRequest_print_json_table);
        break;
    case 9:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_RpcResponseOutput_print_json_table);
        break;
    default:
        break;
    }
}

static void EVP_SDK_RequestUnion_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "getEvent", 8);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "sendState", 9);
        break;
    case 3:
        flatcc_json_printer_enum(ctx, "requestResendConfig", 19);
        break;
    case 4:
        flatcc_json_printer_enum(ctx, "blobOperation", 13);
        break;
    case 5:
        flatcc_json_printer_enum(ctx, "sendTelemetry", 13);
        break;
    case 6:
        flatcc_json_printer_enum(ctx, "sendMessage", 11);
        break;
    case 7:
        flatcc_json_printer_enum(ctx, "sendRpcResponse", 15);
        break;
    case 8:
        flatcc_json_printer_enum(ctx, "streamParamsRequest", 19);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void EVP_SDK_RequestUnion_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_GetEvent_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_StateInput_print_json_table);
        break;
    case 3:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_RequestResendConfig_print_json_table);
        break;
    case 4:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_BlobInput_print_json_table);
        break;
    case 5:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_TelemetryInput_print_json_table);
        break;
    case 6:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_MessageSentInput_print_json_table);
        break;
    case 7:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_RpcResponseInput_print_json_table);
        break;
    case 8:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_StreamParamsRequest_print_json_table);
        break;
    default:
        break;
    }
}

static void EVP_SDK_ResponseUnion_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "getEvent", 8);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "simple", 6);
        break;
    case 3:
        flatcc_json_printer_enum(ctx, "streamParamsResponse", 20);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void EVP_SDK_ResponseUnion_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_Event_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_Simple_print_json_table);
        break;
    case 3:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_StreamParamsResponse_print_json_table);
        break;
    default:
        break;
    }
}

static void EVP_SDK_StreamParams_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "nng", 3);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void EVP_SDK_StreamParams_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, EVP_SDK_StreamNng_print_json_table);
        break;
    default:
        break;
    }
}

static void EVP_SDK_Config_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "topic", 5);
    flatcc_json_printer_uint8_vector_field(ctx, td, 1, "blob", 4);
}

static inline int EVP_SDK_Config_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_Config_print_json_table);
}

static void EVP_SDK_StateInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "topic", 5);
    flatcc_json_printer_uint8_vector_field(ctx, td, 1, "blob", 4);
    flatcc_json_printer_uint64_field(ctx, td, 2, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 3, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_StateInput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_StateInput_print_json_table);
}

static void EVP_SDK_StateOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint64_field(ctx, td, 0, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 1, "reason", 6, UINT32_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 2, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_StateOutput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_StateOutput_print_json_table);
}

static void EVP_SDK_Exit_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
}

static inline int EVP_SDK_Exit_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_Exit_print_json_table);
}

static void EVP_SDK_BlobRequestAzureBlob_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "url", 3);
}

static inline int EVP_SDK_BlobRequestAzureBlob_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobRequestAzureBlob_print_json_table);
}

static void EVP_SDK_BlobRequestEvp_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "remoteName", 10);
    flatcc_json_printer_string_field(ctx, td, 1, "storageName", 11);
}

static inline int EVP_SDK_BlobRequestEvp_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobRequestEvp_print_json_table);
}

static void EVP_SDK_BlobRequestHttp_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "url", 3);
}

static inline int EVP_SDK_BlobRequestHttp_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobRequestHttp_print_json_table);
}

static void EVP_SDK_BlobRequestHttpExt_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "url", 3);
    flatcc_json_printer_string_vector_field(ctx, td, 1, "headers", 7);
}

static inline int EVP_SDK_BlobRequestHttpExt_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobRequestHttpExt_print_json_table);
}

static void EVP_SDK_BlobInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "type", 4, UINT32_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 1, "op", 2, UINT32_C(0));
    flatcc_json_printer_union_field(ctx, td, 3, "request", 7, EVP_SDK_BlobRequestUnion_print_json_union_type, EVP_SDK_BlobRequestUnion_print_json_union);
    flatcc_json_printer_string_field(ctx, td, 4, "filename", 8);
    flatcc_json_printer_uint64_field(ctx, td, 5, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 6, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_BlobInput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobInput_print_json_table);
}

static void EVP_SDK_BlobResultAzureBlob_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "result", 6, UINT32_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 1, "error", 5, UINT32_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 2, "http_status", 11, UINT32_C(0));
}

static inline int EVP_SDK_BlobResultAzureBlob_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobResultAzureBlob_print_json_table);
}

static void EVP_SDK_BlobResultEvp_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "result", 6, UINT32_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 1, "error", 5, UINT32_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 2, "http_status", 11, UINT32_C(0));
}

static inline int EVP_SDK_BlobResultEvp_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobResultEvp_print_json_table);
}

static void EVP_SDK_BlobResultHttp_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "result", 6, UINT32_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 1, "error", 5, UINT32_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 2, "http_status", 11, UINT32_C(0));
}

static inline int EVP_SDK_BlobResultHttp_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobResultHttp_print_json_table);
}

static void EVP_SDK_BlobResultHttpExt_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "result", 6, UINT32_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 1, "error", 5, UINT32_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 2, "http_status", 11, UINT32_C(0));
}

static inline int EVP_SDK_BlobResultHttpExt_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobResultHttpExt_print_json_table);
}

static void EVP_SDK_BlobOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_union_field(ctx, td, 1, "result", 6, EVP_SDK_BlobResultUnion_print_json_union_type, EVP_SDK_BlobResultUnion_print_json_union);
    flatcc_json_printer_uint64_field(ctx, td, 2, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 3, "reason", 6, UINT32_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 4, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_BlobOutput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_BlobOutput_print_json_table);
}

static void EVP_SDK_MessageSentInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "topic", 5);
    flatcc_json_printer_uint8_vector_field(ctx, td, 1, "blob", 4);
    flatcc_json_printer_uint64_field(ctx, td, 2, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 3, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_MessageSentInput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_MessageSentInput_print_json_table);
}

static void EVP_SDK_MessageSentOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint64_field(ctx, td, 0, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 1, "reason", 6, UINT32_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 2, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_MessageSentOutput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_MessageSentOutput_print_json_table);
}

static void EVP_SDK_MessageReceived_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "topic", 5);
    flatcc_json_printer_uint8_vector_field(ctx, td, 1, "blob", 4);
}

static inline int EVP_SDK_MessageReceived_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_MessageReceived_print_json_table);
}

static void EVP_SDK_TelemetryEntry_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "key", 3);
    flatcc_json_printer_string_field(ctx, td, 1, "value", 5);
}

static inline int EVP_SDK_TelemetryEntry_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_TelemetryEntry_print_json_table);
}

static void EVP_SDK_TelemetryInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_table_vector_field(ctx, td, 0, "entries", 7, EVP_SDK_TelemetryEntry_print_json_table);
    flatcc_json_printer_uint64_field(ctx, td, 1, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 2, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_TelemetryInput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_TelemetryInput_print_json_table);
}

static void EVP_SDK_TelemetryOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint64_field(ctx, td, 0, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 1, "reason", 6, UINT32_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 2, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_TelemetryOutput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_TelemetryOutput_print_json_table);
}

static void EVP_SDK_RpcRequest_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint64_field(ctx, td, 0, "id", 2, UINT64_C(0));
    flatcc_json_printer_string_field(ctx, td, 1, "method", 6);
    flatcc_json_printer_string_field(ctx, td, 2, "params", 6);
}

static inline int EVP_SDK_RpcRequest_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_RpcRequest_print_json_table);
}

static void EVP_SDK_RpcResponseInput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint64_field(ctx, td, 0, "id", 2, UINT64_C(0));
    flatcc_json_printer_string_field(ctx, td, 1, "response", 8);
    flatcc_json_printer_uint32_field(ctx, td, 2, "status", 6, UINT32_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 3, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 4, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_RpcResponseInput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_RpcResponseInput_print_json_table);
}

static void EVP_SDK_RpcResponseOutput_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint64_field(ctx, td, 0, "cb", 2, UINT64_C(0));
    flatcc_json_printer_uint32_field(ctx, td, 1, "reason", 6, UINT32_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 2, "cb_userdata", 11, UINT64_C(0));
}

static inline int EVP_SDK_RpcResponseOutput_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_RpcResponseOutput_print_json_table);
}

static void EVP_SDK_Event_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_union_field(ctx, td, 1, "body", 4, EVP_SDK_EventBody_print_json_union_type, EVP_SDK_EventBody_print_json_union);
}

static inline int EVP_SDK_Event_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_Event_print_json_table);
}

static void EVP_SDK_GetEvent_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint64_field(ctx, td, 0, "timeout_sec", 11, UINT64_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 1, "timeout_nsec", 12, UINT64_C(0));
}

static inline int EVP_SDK_GetEvent_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_GetEvent_print_json_table);
}

static void EVP_SDK_RequestResendConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
}

static inline int EVP_SDK_RequestResendConfig_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_RequestResendConfig_print_json_table);
}

static void EVP_SDK_Request_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_union_field(ctx, td, 1, "body", 4, EVP_SDK_RequestUnion_print_json_union_type, EVP_SDK_RequestUnion_print_json_union);
}

static inline int EVP_SDK_Request_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_Request_print_json_table);
}

static void EVP_SDK_Simple_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "result", 6, UINT32_C(0));
}

static inline int EVP_SDK_Simple_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_Simple_print_json_table);
}

static void EVP_SDK_Response_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_union_field(ctx, td, 1, "body", 4, EVP_SDK_ResponseUnion_print_json_union_type, EVP_SDK_ResponseUnion_print_json_union);
}

static inline int EVP_SDK_Response_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_Response_print_json_table);
}

static void EVP_SDK_StreamParamsRequest_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "name", 4);
}

static inline int EVP_SDK_StreamParamsRequest_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_StreamParamsRequest_print_json_table);
}

static void EVP_SDK_StreamNng_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_int8_enum_field(ctx, td, 0, "mode", 4, INT8_C(0), EVP_SDK_StreamNngMode_print_json_enum);
    flatcc_json_printer_int8_enum_field(ctx, td, 1, "protocol", 8, INT8_C(0), EVP_SDK_StreamNngProtocol_print_json_enum);
    flatcc_json_printer_string_field(ctx, td, 2, "connection", 10);
}

static inline int EVP_SDK_StreamNng_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_StreamNng_print_json_table);
}

static void EVP_SDK_StreamParamsResponse_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "result", 6, UINT32_C(0));
    flatcc_json_printer_int8_enum_field(ctx, td, 1, "type", 4, INT8_C(0), EVP_SDK_StreamType_print_json_enum);
    flatcc_json_printer_int8_enum_field(ctx, td, 2, "direction", 9, INT8_C(0), EVP_SDK_StreamDirection_print_json_enum);
    flatcc_json_printer_union_field(ctx, td, 4, "params", 6, EVP_SDK_StreamParams_print_json_union_type, EVP_SDK_StreamParams_print_json_union);
}

static inline int EVP_SDK_StreamParamsResponse_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, EVP_SDK_StreamParamsResponse_print_json_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* SDK_JSON_PRINTER_H */
