# SPDX-FileCopyrightText: 2023-2024 Sony Semiconductor Solutions Corporation
#
# SPDX-License-Identifier: Apache-2.0

on:
  workflow_call:
    inputs:
      builder-tag:
        description: The builder tag to be used
        default: latest
        required: false
        type: string
      package-namespace:
        description: The package namespace for docker images
        default: ${{ github.repository }}
        required: false
        type: string
      ref:
        type: string
        required: true

jobs:
  build-sdk:
    name: SDK (${{ matrix.name }}, ${{ matrix.platform }})
    runs-on: ${{ matrix.runner }}
    container:
      image: ghcr.io/${{ inputs.package-namespace }}/builder-${{ matrix.name }}:${{ inputs.builder-tag }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ github.token }}
      options: ${{ startsWith(matrix.runner, 'buildjet') && '--user 1000:1001' || '--user 1001:127' }}
    timeout-minutes: ${{ startsWith(matrix.runner, 'buildjet') && 20 || 8 }} # the worst case is 3 minutes but buildjet sometimes is slower downloading the docker image
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: raspios-bookworm
            runner: ubuntu-22.04-4core-arm64
            platform: arm64
          - name: ubuntu-noble
            runner: ubuntu-22.04-4core-arm64
            platform: arm64
          - name: ubuntu-noble
            runner: ubuntu-22.04
            platform: amd64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Build SDK
        run: make -j$((`nproc` * 2)) sdk \
          CFLAGS="-O2 -Werror" \
          KBUILD_DEFCONFIG=configs/linux-docker.config

      - name: Install python test dependencies
        working-directory: src/python-evp-app-sdk
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          pip install \
            -e . \
            -r requirements.test.txt

      - name: Run python SDK tests
        working-directory: src/python-evp-app-sdk
        run: |
          . .venv/bin/activate
          python -m pytest \
            --cov=evp.app \
            --cov-report="xml:pysdk-cov.xml" \
            --junit-xml="pysdk-test-res.xml" \
            -v

      - name: Publish pytest coverage
        id: pysdk-cov
        uses: MishaKav/pytest-coverage-comment@main
        if: always()
        with:
          title: EVP Python Application SDK coverage report
          badge-title: Python Application SDK
          coverage-path-prefix: src/python-evp-app-sdk/evp/app/
          pytest-xml-coverage-path: src/python-evp-app-sdk/pysdk-cov.xml
          junitxml-path: src/python-evp-app-sdk/pysdk-test-res.xml
          junitxml-title: Python Application SDK test report

      - name: Publish pytest results to summary
        if: steps.pysdk-cov.outputs.summaryReport
        run: echo ${{ steps.pysdk-cov.outputs.summaryReport }}  >> $GITHUB_STEP_SUMMARY

      - name: Build Python package
        working-directory: src/python-evp-app-sdk
        run: make

      - name: SDK Debian package
        working-directory: src/python-evp-app-sdk
        run: python setup.py --command-packages=stdeb.command bdist_deb

      - uses: actions/upload-artifact@v4
        with:
          name: python-sdk-${{ matrix.name }}-${{ matrix.platform }}-${{ github.run_id }}
          path: lib/python/*

      - uses: actions/upload-artifact@v4
        with:
          name: python-sdk-deb-${{ matrix.name }}-${{ matrix.platform }}-${{ github.run_id }}
          path: src/python-evp-app-sdk/deb_dist/*.deb
